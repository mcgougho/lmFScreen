% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lmFScreen.R
\name{lmFScreen.fit}
\alias{lmFScreen.fit}
\title{Fit a Linear Model with Selective Inference After F-screening}
\usage{
lmFScreen.fit(
  X,
  y,
  alpha = 0.05,
  alpha_ov = 0.05,
  test_cols = 1:ncol(X),
  sigma_sq = NULL,
  seed = NULL,
  compute_CI = TRUE,
  compute_est = TRUE,
  B = 1e+05
)
}
\arguments{
\item{X}{A numeric matrix of predictors.}

\item{y}{A numeric response vector.}

\item{alpha}{Significance level for confidence intervals and hypothesis tests (default: 0.05).}

\item{alpha_ov}{Significance level for the overall F-test used for screening (default: 0.05).}

\item{test_cols}{Indices of predictors to test (default: all columns of X).}

\item{sigma_sq}{Optional noise variance. If NULL, it is estimated using a corrected residual variance.}

\item{seed}{Optional seed for reproducibility.}

\item{compute_CI}{Logical; whether to compute selective confidence intervals (default: TRUE).}

\item{compute_est}{Logical; whether to compute selective point estimates (default: TRUE).}

\item{B}{Number of Monte Carlo samples used for selective inference (default: 100000).}
}
\value{
A list of class lmFScreen containing:
  - Selective coefficients, confidence intervals, and p-values
  - Naive (OLS) coefficients, confidence intervals, and p-values
  - Model settings: alpha and alpha_ov
}
\description{
Performs selective inference in linear regression by estimating selective
coefficients, confidence intervals, and p-values conditional on passing an overall F-test.
}
\details{
The procedure follows these steps:
1. Computes the overall F-statistic and checks whether the data passes the F-screening threshold.
2. If passed, computes naive OLS estimates and standard errors.
3. For each predictor:
   - Computes the selective MLE using Monte Carlo approximation
   - Constructs a selective confidence interval using root-finding
   - Computes a selective p-value using selective resampling

The function skips selective estimation if compute_est is FALSE, and skips confidence interval construction if compute_CI is FALSE.
}
\examples{
data(mtcars)
X <- cbind(mtcars$wt, mtcars$hp)
y <- mtcars$mpg
svdP <- svd(rep(1,nrow(mtcars)), nu = nrow(mtcars))
tol <- nrow(mtcars) * max(svdP$d) * .Machine$double.eps
r <- sum(svdP$d > tol)
U_full <- svdP$u
U_perp <- U_full[, (r+1):ncol(U_full)]
X <- t(U_perp) \%*\% X
y <- t(U_perp) \%*\% y
result <- lmFScreen.fit(X,y)
summary(result)
coef(result)
confint(result)

}
