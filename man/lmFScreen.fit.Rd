% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lmFScreen.R
\name{lmFScreen.fit}
\alias{lmFScreen.fit}
\title{Fit linear model with F-screening Using Selective Inference}
\usage{
lmFScreen.fit(
  X,
  y,
  alpha = 0.05,
  alpha_ov = 0.05,
  test_cols = 1:ncol(X),
  sigma_sq = NULL,
  seed = NULL,
  compute_CI = TRUE,
  compute_est = TRUE,
  B = 1e+05
)
}
\arguments{
\item{X}{A matrix of predictor variables.}

\item{y}{A vector of response variables.}

\item{alpha}{The significance level for hypothesis testing (default: 0.05).}

\item{alpha_ov}{The significance level for the overall F-test (default: 0.05).}

\item{test_cols}{Indices of predictors to test (default: all columns of `X`).}

\item{sigma_sq}{The variance parameter (if NULL, estimated internally).}

\item{seed}{An optional seed for reproducibility (default: NULL).}

\item{B}{The number of Monte Carlo samples used for inference (default: 100000).}
}
\value{
A list containing:
  \item{coefficients}{Selective estimates for each predictor.}
  \item{CIs}{Confidence intervals for each coefficient.}
  \item{pvalues}{Selective p-values for hypothesis testing.}
  \item{naive_coefs}{Naive coefficient estimates from standard OLS.}
}
\description{
This function performs selective inference for linear regression by computing maximum likelihood estimates,
confidence intervals, and p-values for each predictor variable.
}
\details{
This function follows these steps:
1. If `sigma_sq` is not provided, estimates it using `get_variance_estimate`.
2. Computes naive estimates using OLS regression.
3. For each predictor, computes the selective MLE using `compute_MLE`.
4. Obtains confidence intervals using `get_CI`.
5. Computes p-values using `get_pselb`.
}
\examples{
X <- matrix(rnorm(100), nrow = 10)
y <- rnorm(10)
result <- Fscreen.fit(X, y)
summary(result)

}
