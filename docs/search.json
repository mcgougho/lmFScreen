[{"path":"https://mcgougho.github.io/lmFScreen/articles/lmFScreen.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Selective inference across NHANES cycles: lmFScreen example","text":"analysis, apply selective inference using lmFScreen package compare femur neck bone mineral density (BMD) across NHANES cycles men age 30. Selective inference methods adjust fact inference conditioned passing model selection step — case, overall F-test.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/articles/lmFScreen.html","id":"load-required-libraries","dir":"Articles","previous_headings":"","what":"Load Required Libraries","title":"Selective inference across NHANES cycles: lmFScreen example","text":"","code":"library(haven)    # For reading NHANES XPT files library(dplyr)    # For data manipulation library(lmFScreen) # For selective inference via F-screening"},{"path":"https://mcgougho.github.io/lmFScreen/articles/lmFScreen.html","id":"load-and-merge-nhanes-data","dir":"Articles","previous_headings":"","what":"Load and Merge NHANES Data","title":"Selective inference across NHANES cycles: lmFScreen example","text":"load BMD demographic data four NHANES cycles merge participant ID (SEQN).","code":"read_nhanes_cycle <- function(year) {   BMD <- read_xpt(paste0(\"DXXFEM_\", year, \".xpt\"))   DEMO <- read_xpt(paste0(\"DEMO_\", year, \".xpt\"))   merge(BMD, DEMO, by = \"SEQN\") }  merged_2005_2006 <- read_nhanes_cycle(\"2005_2006\") merged_2007_2008 <- read_nhanes_cycle(\"2007_2008\") merged_2009_2010 <- read_nhanes_cycle(\"2009_2010\") merged_2013_2014 <- read_nhanes_cycle(\"2013_2014\")"},{"path":"https://mcgougho.github.io/lmFScreen/articles/lmFScreen.html","id":"clean-and-prepare-data","dir":"Articles","previous_headings":"","what":"Clean and Prepare Data","title":"Selective inference across NHANES cycles: lmFScreen example","text":"retain age, gender, femur neck BMD, rename columns, remove missing values, restrict men older 30.","code":"prep_bmd_data <- function(df) {   df <- df[, c(\"RIDAGEYR\", \"DXXNKBMD\", \"RIAGENDR\")]   colnames(df) <- c(\"Age\", \"Femur_Neck_BMD\", \"Gender\")   df <- na.omit(df)   df %>% filter(Age > 30) }  bmd_men <- bind_rows(   prep_bmd_data(merged_2005_2006) %>% filter(Gender == 1) %>% mutate(Year = \"2005-2006\"),   prep_bmd_data(merged_2007_2008) %>% filter(Gender == 1) %>% mutate(Year = \"2007-2008\"),   prep_bmd_data(merged_2009_2010) %>% filter(Gender == 1) %>% mutate(Year = \"2009-2010\"),   prep_bmd_data(merged_2013_2014) %>% filter(Gender == 1) %>% mutate(Year = \"2013-2014\") )"},{"path":"https://mcgougho.github.io/lmFScreen/articles/lmFScreen.html","id":"construct-design-matrix","dir":"Articles","previous_headings":"","what":"Construct Design Matrix","title":"Selective inference across NHANES cycles: lmFScreen example","text":"create indicator variables NHANES cycle.","code":"bmd_men <- bmd_men %>% mutate(   Year = factor(Year, levels = c(\"2005-2006\", \"2007-2008\", \"2009-2010\", \"2013-2014\")),   Year_2005_2006 = as.integer(Year == \"2005-2006\"),   Year_2007_2008 = as.integer(Year == \"2007-2008\"),   Year_2009_2010 = as.integer(Year == \"2009-2010\"),   Year_2013_2014 = as.integer(Year == \"2013-2014\") )"},{"path":"https://mcgougho.github.io/lmFScreen/articles/lmFScreen.html","id":"define-a-selective-inference-function-for-pairwise-year-comparisons","dir":"Articles","previous_headings":"","what":"Define a Selective Inference Function for Pairwise Year Comparisons","title":"Selective inference across NHANES cycles: lmFScreen example","text":"now define function : Constructs contrast Projects age intercept Runs lmFScreen.fit resulting matrix","code":"do_year_comparison <- function(X, test_col, seed_val) {   set.seed(seed_val)   n <- nrow(X)   Y <- bmd_men$Femur_Neck_BMD   project_out <- cbind(1, bmd_men$Age)   svdP <- svd(project_out, nu = nrow(project_out))   U_perp <- svdP$u[, (sum(svdP$d > .Machine$double.eps) + 1):ncol(svdP$u)]   X <- t(U_perp) %*% X   Y <- t(U_perp) %*% Y   result <- lmFScreen.fit(X, Y, test_cols = test_col, alpha = 0.05, alpha_ov = 0.05)   summary(result) }"},{"path":"https://mcgougho.github.io/lmFScreen/articles/lmFScreen.html","id":"run-pairwise-year-comparisons","dir":"Articles","previous_headings":"","what":"Run Pairwise Year Comparisons","title":"Selective inference across NHANES cycles: lmFScreen example","text":"","code":"# Compare 2005-2006 vs 2007-2008 do_year_comparison(X=cbind(bmd_men$Year_2005_2006 + bmd_men$Year_2007_2008,                            bmd_men$Year_2007_2008, bmd_men$Year_2009_2010),                    test_col = 2, seed_val = 5678) ##  ##  lmFScreen Model Summary  ## -------------------------------------- ## Number of predictors: 1 ## -------------------------------------- ##  ## Selective Estimates: ## Predictor       Estimate     Lower.CI    Upper.CI    P-value ## ------------------------------------------------------------- ##  X2            -0.003686     -0.0127      0.0053      0.4234 ##  ## Naive Estimates: ## Predictor       Estimate     Lower.CI    Upper.CI    P-value ## ------------------------------------------------------------- ##  X2            -0.003686     -0.0127      0.0053      0.4228 ##  ##  ## Significance levels: * < 0.05  ** < 0.01  *** < 0.001 # Compare 2005-2006 vs 2009-2010 do_year_comparison(X=cbind(bmd_men$Year_2005_2006 + bmd_men$Year_2009_2010,                            bmd_men$Year_2007_2008, bmd_men$Year_2009_2010),                    test_col = 3, seed_val = 56910) ##  ##  lmFScreen Model Summary  ## -------------------------------------- ## Number of predictors: 1 ## -------------------------------------- ##  ## Selective Estimates: ## Predictor       Estimate     Lower.CI    Upper.CI    P-value ## ------------------------------------------------------------- ##  X3            -0.003280     -0.0123      0.0057      0.4729 ##  ## Naive Estimates: ## Predictor       Estimate     Lower.CI    Upper.CI    P-value ## ------------------------------------------------------------- ##  X3            -0.003280     -0.0122      0.0057      0.4727 ##  ##  ## Significance levels: * < 0.05  ** < 0.01  *** < 0.001 # Compare 2005-2006 vs 2013-2014 do_year_comparison(X=cbind(bmd_men$Year_2005_2006 + bmd_men$Year_2013_2014,                            bmd_men$Year_2007_2008, bmd_men$Year_2013_2014),                    test_col = 3, seed_val = 561314) ##  ##  lmFScreen Model Summary  ## -------------------------------------- ## Number of predictors: 1 ## -------------------------------------- ##  ## Selective Estimates: ## Predictor       Estimate     Lower.CI    Upper.CI    P-value ## ------------------------------------------------------------- ##  X3            -0.018797     -0.0294     -0.0106      0.0010*** ##  ## Naive Estimates: ## Predictor       Estimate     Lower.CI    Upper.CI    P-value ## ------------------------------------------------------------- ##  X3            -0.019821     -0.0294     -0.0102      0.0001*** ##  ##  ## Significance levels: * < 0.05  ** < 0.01  *** < 0.001 # Compare 2007-2008 vs 2009-2010 do_year_comparison(X=cbind(bmd_men$Year_2007_2008+bmd_men$Year_2009_2010,                            bmd_men$Year_2009_2010, bmd_men$Year_2013_2014),                    test_col = 2, seed_val = 78910) ##  ##  lmFScreen Model Summary  ## -------------------------------------- ## Number of predictors: 1 ## -------------------------------------- ##  ## Selective Estimates: ## Predictor       Estimate     Lower.CI    Upper.CI    P-value ## ------------------------------------------------------------- ##  X2             0.000407     -0.0078      0.0086      0.9232 ##  ## Naive Estimates: ## Predictor       Estimate     Lower.CI    Upper.CI    P-value ## ------------------------------------------------------------- ##  X2             0.000407     -0.0079      0.0087      0.9233 ##  ##  ## Significance levels: * < 0.05  ** < 0.01  *** < 0.001 # Compare 2007-2008 vs 2013-2014 do_year_comparison(X=cbind(bmd_men$Year_2007_2008+bmd_men$Year_2013_2014,                            bmd_men$Year_2009_2010, bmd_men$Year_2013_2014),                    test_col = 3, seed_val = 781314) ##  ##  lmFScreen Model Summary  ## -------------------------------------- ## Number of predictors: 1 ## -------------------------------------- ##  ## Selective Estimates: ## Predictor       Estimate     Lower.CI    Upper.CI    P-value ## ------------------------------------------------------------- ##  X3            -0.016050     -0.0251     -0.0071      0.0004*** ##  ## Naive Estimates: ## Predictor       Estimate     Lower.CI    Upper.CI    P-value ## ------------------------------------------------------------- ##  X3            -0.016134     -0.0251     -0.0072      0.0004*** ##  ##  ## Significance levels: * < 0.05  ** < 0.01  *** < 0.001 # Compare 2009-2010 vs 2013-2014 do_year_comparison(X=cbind(bmd_men$Year_2007_2008,                            bmd_men$Year_2009_2010+bmd_men$Year_2013_2014,                            bmd_men$Year_2013_2014),                    test_col = 3, seed_val = 9101314) ##  ##  lmFScreen Model Summary  ## -------------------------------------- ## Number of predictors: 1 ## -------------------------------------- ##  ## Selective Estimates: ## Predictor       Estimate     Lower.CI    Upper.CI    P-value ## ------------------------------------------------------------- ##  X3            -0.016186     -0.0255     -0.0086      0.0006*** ##  ## Naive Estimates: ## Predictor       Estimate     Lower.CI    Upper.CI    P-value ## ------------------------------------------------------------- ##  X3            -0.016541     -0.0255     -0.0076      0.0003*** ##  ##  ## Significance levels: * < 0.05  ** < 0.01  *** < 0.001"},{"path":"https://mcgougho.github.io/lmFScreen/articles/lmFScreen.html","id":"interpretation","dir":"Articles","previous_headings":"","what":"Interpretation","title":"Selective inference across NHANES cycles: lmFScreen example","text":"analyses provide valid inference conditional passing overall F-test. selective p-values intervals corrected selection step, avoiding overconfident inference can arise standard (naive) linear regression output. Use approach interpret post-hoc comparisons reliably data exploration confirmatory re-analysis.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/articles/psel_retro.html","id":"ces-d-analysis","dir":"Articles","previous_headings":"","what":"CES-D Analysis","title":"Selective inference across age groups: psel_retro Example","text":"","code":"means <- c(9.33, 7.60, 8.79) sds <- c(7.16, 5.84, 5.68) ns <- c(150, 449, 227) n <- sum(ns); p <- 3 r_squared <- sum(ns * (means - mean(means))^2) / (sum(ns * (means - mean(means))^2) + sum((ns - 1) * sds^2)) mse <- sum((ns - 1) * sds^2) / (n - p) rse <- sqrt(mse) df_within <- n - p  results_1_2 <- calculate_t_and_p(means[1], means[2], ns[1], ns[2], mse, df_within) results_1_3 <- calculate_t_and_p(means[1], means[3], ns[1], ns[3], mse, df_within) results_2_3 <- calculate_t_and_p(means[2], means[3], ns[2], ns[3], mse, df_within)  cat(\"\\nCES-D Naive p-values (with Sidak correction):\\n\") ##  ## CES-D Naive p-values (with Sidak correction): cat(\"<65 vs 65–84: p =\", results_1_2$p_val, \", sidak =\", results_1_2$sidak, \"\\n\") ## <65 vs 65–84: p = 0.00254 , sidak = 0.007600662 cat(\"<65 vs ≥85: p =\", results_1_3$p_val, \", sidak =\", results_1_3$sidak, \"\\n\") ## <65 vs ≥85: p = 0.3972102 , sidak = 0.780973 cat(\"65–84 vs ≥85: p =\", results_2_3$p_val, \", sidak =\", results_2_3$sidak, \"\\n\") ## 65–84 vs ≥85: p = 0.01609221 , sidak = 0.04750392 cat(\"\\nCES-D Selective p-values:\\n\") ##  ## CES-D Selective p-values: cat(\"<65 vs 65–84:\", psel_retro(n, p, r_squared, rse, (results_1_2$t_stat)^2), \"\\n\") ## <65 vs 65–84: 0.02773878 cat(\"<65 vs ≥85:\", psel_retro(n, p, r_squared, rse, (results_1_3$t_stat)^2), \"\\n\") ## <65 vs ≥85: 0.397695 cat(\"65–84 vs ≥85:\", psel_retro(n, p, r_squared, rse, (results_2_3$t_stat)^2), \"\\n\") ## 65–84 vs ≥85: 0.01650706"},{"path":"https://mcgougho.github.io/lmFScreen/articles/psel_retro.html","id":"sleep-analysis","dir":"Articles","previous_headings":"","what":"Sleep Analysis","title":"Selective inference across age groups: psel_retro Example","text":"","code":"means <- c(6.65, 6.93, 7.07) sds <- c(0.87, 0.87, 1.02) ns <- c(150, 449, 227) n <- sum(ns); p <- 3 r_squared <- sum(ns * (means - mean(means))^2) / (sum(ns * (means - mean(means))^2) + sum((ns - 1) * sds^2)) mse <- sum((ns - 1) * sds^2) / (n - p) rse <- sqrt(mse) df_within <- n - p  results_1_2 <- calculate_t_and_p(means[1], means[2], ns[1], ns[2], mse, df_within) results_1_3 <- calculate_t_and_p(means[1], means[3], ns[1], ns[3], mse, df_within) results_2_3 <- calculate_t_and_p(means[2], means[3], ns[2], ns[3], mse, df_within)  cat(\"\\nSleep Naive p-values (with Sidak correction):\\n\") ##  ## Sleep Naive p-values (with Sidak correction): cat(\"<65 vs 65–84: p =\", results_1_2$p_val, \", sidak =\", results_1_2$sidak, \"\\n\") ## <65 vs 65–84: p = 0.001202429 , sidak = 0.00360295 cat(\"<65 vs ≥85: p =\", results_1_3$p_val, \", sidak =\", results_1_3$sidak, \"\\n\") ## <65 vs ≥85: p = 1.409129e-05 , sidak = 4.227326e-05 cat(\"65–84 vs ≥85: p =\", results_2_3$p_val, \", sidak =\", results_2_3$sidak, \"\\n\") ## 65–84 vs ≥85: p = 0.06025183 , sidak = 0.1700834 cat(\"\\nSleep Selective p-values:\\n\") ##  ## Sleep Selective p-values: cat(\"<65 vs 65–84:\", psel_retro(n, p, r_squared, rse, (results_1_2$t_stat)^2), \"\\n\") ## <65 vs 65–84: 0.00118 cat(\"<65 vs ≥85:\", psel_retro(n, p, r_squared, rse, (results_1_3$t_stat)^2), \"\\n\") ## <65 vs ≥85: 0.001294139 cat(\"65–84 vs ≥85:\", psel_retro(n, p, r_squared, rse, (results_2_3$t_stat)^2), \"\\n\") ## 65–84 vs ≥85: 0.060141"},{"path":"https://mcgougho.github.io/lmFScreen/articles/psel_retro.html","id":"mmses-analysis","dir":"Articles","previous_headings":"","what":"MMSES Analysis","title":"Selective inference across age groups: psel_retro Example","text":"","code":"means <- c(29.31, 28.12, 26.14) sds <- c(1.19, 2.42, 4.15) ns <- c(150, 449, 227) n <- sum(ns); p <- 3 r_squared <- sum(ns * (means - mean(means))^2) / (sum(ns * (means - mean(means))^2) + sum((ns - 1) * sds^2)) mse <- sum((ns - 1) * sds^2) / (n - p) rse <- sqrt(mse) df_within <- n - p  results_1_2 <- calculate_t_and_p(means[1], means[2], ns[1], ns[2], mse, df_within) results_1_3 <- calculate_t_and_p(means[1], means[3], ns[1], ns[3], mse, df_within) results_2_3 <- calculate_t_and_p(means[2], means[3], ns[2], ns[3], mse, df_within)  cat(\"\\nMMSES Naive p-values (with Sidak correction):\\n\") ##  ## MMSES Naive p-values (with Sidak correction): cat(\"<65 vs 65–84: p =\", results_1_2$p_val, \", sidak =\", results_1_2$sidak, \"\\n\") ## <65 vs 65–84: p = 1.151974e-05 , sidak = 3.455883e-05 cat(\"<65 vs ≥85: p =\", results_1_3$p_val, \", sidak =\", results_1_3$sidak, \"\\n\") ## <65 vs ≥85: p = 1.925529e-24 , sidak = 0 cat(\"65–84 vs ≥85: p =\", results_2_3$p_val, \", sidak =\", results_2_3$sidak, \"\\n\") ## 65–84 vs ≥85: p = 8.577183e-17 , sidak = 3.330669e-16 cat(\"\\nMMSES Selective p-values:\\n\") ##  ## MMSES Selective p-values: cat(\"<65 vs 65–84:\", psel_retro(n, p, r_squared, rse, (results_1_2$t_stat)^2), \"\\n\") ## <65 vs 65–84: 1.1e-05 cat(\"<65 vs ≥85:\", psel_retro(n, p, r_squared, rse, (results_1_3$t_stat)^2), \"\\n\") ## <65 vs ≥85: 0 cat(\"65–84 vs ≥85:\", psel_retro(n, p, r_squared, rse, (results_2_3$t_stat)^2), \"\\n\") ## 65–84 vs ≥85: 0"},{"path":"https://mcgougho.github.io/lmFScreen/articles/psel_retro.html","id":"mdrs-analysis","dir":"Articles","previous_headings":"","what":"MDRS Analysis","title":"Selective inference across age groups: psel_retro Example","text":"","code":"means <- c(141.5, 139.0, 131.6) sds <- c(2.57, 5.85, 14.89) ns <- c(150, 449, 227) n <- sum(ns); p <- 3 r_squared <- sum(ns * (means - mean(means))^2) / (sum(ns * (means - mean(means))^2) + sum((ns - 1) * sds^2)) mse <- sum((ns - 1) * sds^2) / (n - p) rse <- sqrt(mse) df_within <- n - p  results_1_2 <- calculate_t_and_p(means[1], means[2], ns[1], ns[2], mse, df_within) results_1_3 <- calculate_t_and_p(means[1], means[3], ns[1], ns[3], mse, df_within) results_2_3 <- calculate_t_and_p(means[2], means[3], ns[2], ns[3], mse, df_within)  cat(\"\\nMDRS Naive p-values (with Sidak correction):\\n\") ##  ## MDRS Naive p-values (with Sidak correction): cat(\"<65 vs 65–84: p =\", results_1_2$p_val, \", sidak =\", results_1_2$sidak, \"\\n\") ## <65 vs 65–84: p = 0.00325966 , sidak = 0.009747137 cat(\"<65 vs ≥85: p =\", results_1_3$p_val, \", sidak =\", results_1_3$sidak, \"\\n\") ## <65 vs ≥85: p = 3.523733e-24 , sidak = 0 cat(\"65–84 vs ≥85: p =\", results_2_3$p_val, \", sidak =\", results_2_3$sidak, \"\\n\") ## 65–84 vs ≥85: p = 9.552161e-23 , sidak = 0 cat(\"\\nMDRS Selective p-values:\\n\") ##  ## MDRS Selective p-values: cat(\"<65 vs 65–84:\", psel_retro(n, p, r_squared, rse, (results_1_2$t_stat)^2), \"\\n\") ## <65 vs 65–84: 0.003291 cat(\"<65 vs ≥85:\", psel_retro(n, p, r_squared, rse, (results_1_3$t_stat)^2), \"\\n\") ## <65 vs ≥85: 0 cat(\"65–84 vs ≥85:\", psel_retro(n, p, r_squared, rse, (results_2_3$t_stat)^2), \"\\n\") ## 65–84 vs ≥85: 0"},{"path":"https://mcgougho.github.io/lmFScreen/articles/psel_retro.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Selective inference across age groups: psel_retro Example","text":"analysis, used selective inference techniques revisit pairwise comparisons across age groups four outcomes reported JAMA Network Open paper. selective p-values differ meaningfully naive counterparts (case CES-D outcome), others remain similar. Sidak-corrected p-values reported original paper align Sidak-corrected naive p-values shown . conditioning rejection overall F-test, selective p-values provide principled post-hoc analysis guarding inflated Type error.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Olivia McGough. Maintainer.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McGough O (2025). lmFScreen: Selective Inference Linear Regression F-Screening. R package version 0.1.0, https://mcgougho.github.io/lmFScreen.","code":"@Manual{,   title = {lmFScreen: Selective Inference for Linear Regression with F-Screening},   author = {Olivia McGough},   year = {2025},   note = {R package version 0.1.0},   url = {https://mcgougho.github.io/lmFScreen}, }"},{"path":"https://mcgougho.github.io/lmFScreen/index.html","id":"lmfscreen","dir":"","previous_headings":"","what":"lmFScreen","title":"lmFScreen","text":"repository contains lmFScreen R package code reproduce figures paper “Inference F-screening Linear Regression.”","code":""},{"path":"https://mcgougho.github.io/lmFScreen/index.html","id":"lmfscreen-package","dir":"","previous_headings":"","what":"lmFScreen Package","title":"lmFScreen","text":"lmFScreen package enables valid post-selection inference following overall F-test linear regression, using tools selective inference. Given design matrix X response vector y, package: Performs overall F-test global null hypothesis H₀: β₁ = β₂ = … = βₚ = 0 () test rejected, conducts follow-tests specified coefficients (test_cols) Selective p-values Selective confidence intervals Selective point estimates Naive (unadjusted) counterparts comparison procedure ensures valid inference conditional rejection overall null hypothesis. install lmFScreen package GitHub, run following R console: devtools::install_github(\"mcgougho/lmFScreen\").","code":""},{"path":"https://mcgougho.github.io/lmFScreen/index.html","id":"figures","dir":"","previous_headings":"","what":"Figures","title":"lmFScreen","text":"figures/ directory contains R scripts reproduce plots paper.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/index.html","id":"id_1-power-and-type-i-error-global-and-local-null","dir":"","previous_headings":"Figures","what":"1. Power and Type I Error (Global and Local Null)","title":"lmFScreen","text":"Files: power_t1error_global_null.R, power_t1error_local_null.R Description: Demonstrates Type error control selective p-value null compares power selective procedure sample-splitting approach.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/index.html","id":"id_2-confidence-interval-coverage-and-width","dir":"","previous_headings":"Figures","what":"2. Confidence Interval Coverage and Width","title":"lmFScreen","text":"Files: CI_globalnull.R, CI_localnull.R Coverage (selective vs. non-selective) Width (one plot value true coefficient horizontal axis one plot number observations horizontal axis)","code":""},{"path":"https://mcgougho.github.io/lmFScreen/index.html","id":"id_3-multiple-testing-adjustments","dir":"","previous_headings":"Figures","what":"3. Multiple Testing Adjustments","title":"lmFScreen","text":"File: multiple_corrections.R Description: Shows traditional multiple testing corrections (Bonferroni, Scheffé) control Type error F-screening.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/index.html","id":"id_4-selective-vs-naive-point-estimates","dir":"","previous_headings":"Figures","what":"4. Selective vs. Naive Point Estimates","title":"lmFScreen","text":"File: point_estimates.R Description: Plots selective vs. non-selective point estimates first coefficient, global null.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/coef.lmFScreen.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Coefficients from an lmFScreen Model — coef.lmFScreen","title":"Extract Coefficients from an lmFScreen Model — coef.lmFScreen","text":"S3 method prints returns selective naive coefficient estimates lmFScreen model.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/coef.lmFScreen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Coefficients from an lmFScreen Model — coef.lmFScreen","text":"","code":"# S3 method for class 'lmFScreen' coef(object, ...)"},{"path":"https://mcgougho.github.io/lmFScreen/reference/coef.lmFScreen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Coefficients from an lmFScreen Model — coef.lmFScreen","text":"object object class lmFScreen. ... Currently unused.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/coef.lmFScreen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Coefficients from an lmFScreen Model — coef.lmFScreen","text":"Invisibly returns data frame containing: Predictor: Names predictor variables Estimate (Selective): Selective coefficient estimates Estimate (Naive): Naive coefficient estimates","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/coef.lmFScreen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Coefficients from an lmFScreen Model — coef.lmFScreen","text":"","code":"data(mtcars) mod <- lmFScreen(mpg ~ wt + hp, data = mtcars) coef(mod) #>  #> Coefficients from lmFScreen #> ---------------------------- #>   Predictor Selective.Est   Naive.Est #> 1        wt   -3.87783074 -3.87783074 #> 2        hp   -0.03177295 -0.03177295"},{"path":"https://mcgougho.github.io/lmFScreen/reference/compute_MLE.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Selective Maximum Likelihood Estimate for beta1 — compute_MLE","title":"Compute the Selective Maximum Likelihood Estimate for beta1 — compute_MLE","text":"function numerically approximates conditional maximum likelihood estimate (MLE) single regression coefficient (beta1) using Monte Carlo approximation selective likelihood, conditional passing overall F-test.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/compute_MLE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Selective Maximum Likelihood Estimate for beta1 — compute_MLE","text":"","code":"compute_MLE(   X,   y,   sigma_sq,   alpha_ov,   interval = c(-10, 10),   B = 1e+06,   seed = 12345 )"},{"path":"https://mcgougho.github.io/lmFScreen/reference/compute_MLE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Selective Maximum Likelihood Estimate for beta1 — compute_MLE","text":"X numeric matrix predictor variables (n x p), first column corresponding beta1. y numeric response vector length n. sigma_sq noise variance. unknown, estimated beforehand. alpha_ov significance level overall F-test (used defining selection region). interval numeric vector length 2 giving search interval beta1 (default: c(-10, 10)). B number Monte Carlo samples used approximate likelihood (default: 1e6). seed seed reproducibility (default: 12345).","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/compute_MLE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Selective Maximum Likelihood Estimate for beta1 — compute_MLE","text":"list containing: beta1 MLE beta1 selective likelihood. max_likelihood maximum log-likelihood value achieved optimal beta1.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/compute_likelihood_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the Selective Log-Likelihood Function for beta1 — compute_likelihood_function","title":"Construct the Selective Log-Likelihood Function for beta1 — compute_likelihood_function","text":"function constructs log-likelihood function single regression coefficient (beta1), conditional selection via overall F-test. log-likelihood approximated using Monte Carlo integration.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/compute_likelihood_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the Selective Log-Likelihood Function for beta1 — compute_likelihood_function","text":"","code":"compute_likelihood_function(   X,   y,   sigma_sq,   alpha_ov = 0.05,   B = 1e+06,   seed = 12345 )"},{"path":"https://mcgougho.github.io/lmFScreen/reference/compute_likelihood_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the Selective Log-Likelihood Function for beta1 — compute_likelihood_function","text":"X numeric matrix predictors (n x p), beta1 corresponding first column. y numeric response vector length n. sigma_sq noise variance. alpha_ov significance level overall F-test (default: 0.05). B number Monte Carlo samples (default: 1e6). seed seed reproducibility (default: 12345).","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/compute_likelihood_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the Selective Log-Likelihood Function for beta1 — compute_likelihood_function","text":"function one argument beta1 returns approximate log-likelihood, conditional selection. observed data fails selection condition, function returns -Inf.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/compute_likelihood_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct the Selective Log-Likelihood Function for beta1 — compute_likelihood_function","text":"likelihood proportional conditional density test statistic (linear projection y) given observed F-statistic exceeds critical value null. selection region defined using F-test threshold orthogonal projection structure regression. Internally, function generates samples noncentral central chi-squared distribution approximate conditional probability selection.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/confint.lmFScreen.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Confidence Intervals for an lmFScreen Model — confint.lmFScreen","title":"Compute Confidence Intervals for an lmFScreen Model — confint.lmFScreen","text":"Prints returns confidence intervals selective naive estimates. confidence level taken alpha value stored lmFScreen object.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/confint.lmFScreen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Confidence Intervals for an lmFScreen Model — confint.lmFScreen","text":"","code":"# S3 method for class 'lmFScreen' confint(object, ...)"},{"path":"https://mcgougho.github.io/lmFScreen/reference/confint.lmFScreen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Confidence Intervals for an lmFScreen Model — confint.lmFScreen","text":"object object class lmFScreen containing model results. ... Additional arguments (currently unused).","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/confint.lmFScreen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Confidence Intervals for an lmFScreen Model — confint.lmFScreen","text":"Invisibly returns list containing: Selective: data frame confidence intervals selective estimates Naive: data frame confidence intervals naive estimates","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/confint.lmFScreen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Confidence Intervals for an lmFScreen Model — confint.lmFScreen","text":"","code":"data(mtcars) result <- lmFScreen(mpg ~ wt + hp, data = mtcars) confint(result) #>  #> lmFScreen Model Confidence Intervals #> ------------------------------------------------------ #> Confidence Level: 95.00% #> Number of predictors: 2 #> ------------------------------------------------------ #>  #> Selective Confidence Intervals: #> Predictor       Lower.CI     Upper.CI #> --------------------------------------------- #>  wt                -5.1701       -2.5820 #>  hp                -0.0502       -0.0133 #>  #> Naive Confidence Intervals: #> Predictor       Lower.CI     Upper.CI #> --------------------------------------------- #>  wt                -5.1180       -2.6377 #>  hp                -0.0495       -0.0141 #>"},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_CI.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Selective Confidence Interval Using Root-Finding — get_CI","title":"Compute a Selective Confidence Interval Using Root-Finding — get_CI","text":"function computes selective confidence interval regression coefficient identifying values parameter selective p-value equals specified significance level.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_CI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Selective Confidence Interval Using Root-Finding — get_CI","text":"","code":"get_CI(pselb, point_est, naive_se_est, alpha)"},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_CI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Selective Confidence Interval Using Root-Finding — get_CI","text":"pselb function returns selective p-value given value parameter. point_est point estimate parameter (typically selective MLE). naive_se_est naive standard error estimate. alpha significance level confidence interval (default 0.05).","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_CI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Selective Confidence Interval Using Root-Finding — get_CI","text":"numeric vector length 2 giving lower upper bounds selective confidence interval.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_CI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a Selective Confidence Interval Using Root-Finding — get_CI","text":"function computes lower upper bounds confidence interval solving values parameter selective p-value equals significance level alpha. search performed using uniroot, finds roots function defined difference selective p-value alpha. function expands search range iteratively root initially found given interval. selective p-value point estimate less equal alpha, interval considered valid. , empty infinite interval may returned, warning printed.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_Xy_centered.html","id":null,"dir":"Reference","previous_headings":"","what":"Project Out the Intercept from X and y — get_Xy_centered","title":"Project Out the Intercept from X and y — get_Xy_centered","text":"function projects predictor matrix X response vector y onto orthogonal complement intercept (constant) vector. removes component data explained intercept, effectively centering data sense removing mean direction.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_Xy_centered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project Out the Intercept from X and y — get_Xy_centered","text":"","code":"get_Xy_centered(X, y)"},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_Xy_centered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project Out the Intercept from X and y — get_Xy_centered","text":"X numeric matrix predictors dimensions (n x p). y numeric response vector length n.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_Xy_centered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project Out the Intercept from X and y — get_Xy_centered","text":"list containing: X predictor matrix projection (dimensions: (n - 1) x p). y response vector projection (length: n - 1).","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_Xy_centered.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project Out the Intercept from X and y — get_Xy_centered","text":"function uses singular value decomposition (SVD) intercept vector construct orthonormal basis space orthogonal intercept. projects X y onto space, effectively removing contribution intercept.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_Xy_centered.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project Out the Intercept from X and y — get_Xy_centered","text":"","code":"X <- matrix(rnorm(100), nrow = 10) y <- rnorm(10) centered_data <- lmFScreen:::get_Xy_centered(X, y) X_centered <- centered_data$X y_centered <- centered_data$y"},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_pselb.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the Selective P-Value Function for a Single Coefficient — get_pselb","title":"Construct the Selective P-Value Function for a Single Coefficient — get_pselb","text":"function returns function computes selective p-value given value b (hypothesized value beta1), conditional rejection overall F-test. p-value estimated via Monte Carlo integration, accounting selection event.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_pselb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the Selective P-Value Function for a Single Coefficient — get_pselb","text":"","code":"get_pselb(   X,   y,   sigma_sq,   yPy = NULL,   rss = NULL,   alpha_ov = 0.05,   B = 10000,   min_select = B,   B_max = 1e+07,   seed = NULL,   verbose = FALSE )"},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_pselb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the Selective P-Value Function for a Single Coefficient — get_pselb","text":"X numeric matrix predictors n rows p columns. first column corresponds coefficient interest. y numeric response vector length n. sigma_sq variance error term. Must specified advance. yPy Optional value quadratic form y' P_X y. NULL, computed internally. rss Optional residual sum squares. NULL, computed internally using y yPy. alpha_ov Significance level overall F-test. Default 0.05. B Number Monte Carlo samples drawn per iteration. Default 10,000. min_select Minimum number selected samples required estimate p-value. Default equal B. B_max Maximum number Monte Carlo samples drawn iteration. Default 10 million. seed Optional seed reproducibility. NULL, random seed generated. verbose Logical flag indicating whether print progress messages sampling.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_pselb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the Selective P-Value Function for a Single Coefficient — get_pselb","text":"function takes numeric argument b returns selective p-value corresponding value beta1. selection condition met observed data, returned function always return NA.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_pselb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct the Selective P-Value Function for a Single Coefficient — get_pselb","text":"returned function estimates conditional probability test statistic T(b) exceeds observed value, given data passes F-test threshold. Sampling proceeds least min_select Monte Carlo draws satisfy selection condition. achieved within given sample limits, function returns NA.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_variance_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Variance for Selective Inference — get_variance_estimate","title":"Estimate Variance for Selective Inference — get_variance_estimate","text":"Computes estimate error variance used selective inference, based rescaled residual sum squares linear regression model.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_variance_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Variance for Selective Inference — get_variance_estimate","text":"","code":"get_variance_estimate(X, Y, alpha_ov)"},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_variance_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Variance for Selective Inference — get_variance_estimate","text":"X numeric matrix predictor variables n rows p columns. Y numeric response vector length n. alpha_ov significance level used overall F-test.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_variance_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Variance for Selective Inference — get_variance_estimate","text":"numeric value representing estimated variance used selective inference.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/get_variance_estimate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Variance for Selective Inference — get_variance_estimate","text":"function estimates variance error term assumption inference performed conditional rejection overall F-test. procedure includes: Simulating samples chi-squared distributions compute correction factor accounts selection event. Fitting linear regression model Y X computing residual sum squares. Adjusting residual sum squares using correction factor obtain debiased estimate variance. estimate useful conducting selective inference p-values confidence intervals condition overall model selection step.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/lmFScreen.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a Linear Model with Selective Inference After F-screening — lmFScreen.fit","title":"Fit a Linear Model with Selective Inference After F-screening — lmFScreen.fit","text":"Performs selective inference linear regression estimating selective coefficients, confidence intervals, p-values conditional passing overall F-test.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/lmFScreen.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a Linear Model with Selective Inference After F-screening — lmFScreen.fit","text":"","code":"lmFScreen.fit(   X,   y,   alpha = 0.05,   alpha_ov = 0.05,   test_cols = 1:ncol(X),   sigma_sq = NULL,   seed = NULL,   compute_CI = TRUE,   compute_est = TRUE,   B = 1e+05 )"},{"path":"https://mcgougho.github.io/lmFScreen/reference/lmFScreen.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a Linear Model with Selective Inference After F-screening — lmFScreen.fit","text":"X numeric matrix predictors. y numeric response vector. alpha Significance level confidence intervals hypothesis tests (default: 0.05). alpha_ov Significance level overall F-test used screening (default: 0.05). test_cols Indices predictors test (default: columns X). sigma_sq Optional noise variance. NULL, estimated using corrected residual variance. seed Optional seed reproducibility. compute_CI Logical; whether compute selective confidence intervals (default: TRUE). compute_est Logical; whether compute selective point estimates (default: TRUE). B Number Monte Carlo samples used selective inference (default: 100000).","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/lmFScreen.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a Linear Model with Selective Inference After F-screening — lmFScreen.fit","text":"list class lmFScreen containing: Selective coefficients, confidence intervals, p-values Naive (OLS) coefficients, confidence intervals, p-values Model settings: alpha alpha_ov","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/lmFScreen.fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a Linear Model with Selective Inference After F-screening — lmFScreen.fit","text":"procedure follows steps: Computes overall F-statistic checks whether data passes F-screening threshold. passed, computes naive OLS estimates standard errors. predictor: Computes selective MLE using Monte Carlo approximation Constructs selective confidence interval using root-finding Computes selective p-value using selective resampling function skips selective estimation compute_est FALSE, skips confidence interval construction compute_CI FALSE.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/lmFScreen.fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a Linear Model with Selective Inference After F-screening — lmFScreen.fit","text":"","code":"data(mtcars) X <- cbind(mtcars$wt, mtcars$hp) y <- mtcars$mpg svdP <- svd(rep(1,nrow(mtcars)), nu = nrow(mtcars)) tol <- nrow(mtcars) * max(svdP$d) * .Machine$double.eps r <- sum(svdP$d > tol) U_full <- svdP$u U_perp <- U_full[, (r+1):ncol(U_full)] X <- t(U_perp) %*% X y <- t(U_perp) %*% y result <- lmFScreen.fit(X,y) summary(result) #>  #>  lmFScreen Model Summary  #> -------------------------------------- #> Number of predictors: 2 #> -------------------------------------- #>  #> Selective Estimates: #> Predictor       Estimate     Lower.CI    Upper.CI    P-value #> ------------------------------------------------------------- #>  X1            -3.877831     -5.1677     -2.5824      0.0000*** #>  X2            -0.031773     -0.0502     -0.0134      0.0016** #>  #> Naive Estimates: #> Predictor       Estimate     Lower.CI    Upper.CI    P-value #> ------------------------------------------------------------- #>  X1            -3.877831     -5.1180     -2.6377      0.0000*** #>  X2            -0.031773     -0.0495     -0.0141      0.0015** #>  #>  #> Significance levels: * < 0.05  ** < 0.01  *** < 0.001 coef(result) #>  #> Coefficients from lmFScreen #> ---------------------------- #>   Predictor Selective.Est   Naive.Est #> 1        X1   -3.87783074 -3.87783074 #> 2        X2   -0.03177295 -0.03177295 confint(result) #>  #> lmFScreen Model Confidence Intervals #> ------------------------------------------------------ #> Confidence Level: 95.00% #> Number of predictors: 2 #> ------------------------------------------------------ #>  #> Selective Confidence Intervals: #> Predictor       Lower.CI     Upper.CI #> --------------------------------------------- #>  X1                -5.1677       -2.5824 #>  X2                -0.0502       -0.0134 #>  #> Naive Confidence Intervals: #> Predictor       Lower.CI     Upper.CI #> --------------------------------------------- #>  X1                -5.1180       -2.6377 #>  X2                -0.0495       -0.0141 #>"},{"path":"https://mcgougho.github.io/lmFScreen/reference/lmFScreen.html","id":null,"dir":"Reference","previous_headings":"","what":"lmFScreen: Selective Inference for Linear Regression via F-screening — lmFScreen","title":"lmFScreen: Selective Inference for Linear Regression via F-screening — lmFScreen","text":"Fits selective inference linear regression model using R formula interface. intercept present model, data projected remove intercept conducting inference.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/lmFScreen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lmFScreen: Selective Inference for Linear Regression via F-screening — lmFScreen","text":"","code":"lmFScreen(   formula,   data,   alpha = 0.05,   alpha_ov = 0.05,   sigma_sq = NULL,   seed = NULL,   compute_CI = TRUE,   compute_est = TRUE,   B = 1e+05 )"},{"path":"https://mcgougho.github.io/lmFScreen/reference/lmFScreen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lmFScreen: Selective Inference for Linear Regression via F-screening — lmFScreen","text":"formula formula specifying linear model (e.g., y ~ x1 + x2). data optional data frame containing variables model. alpha Significance level confidence intervals hypothesis tests (default: 0.05). alpha_ov Significance level overall F-test used screening (default: 0.05). sigma_sq Optional noise variance. NULL, estimated using corrected residual variance. seed Optional seed reproducibility. compute_CI Logical; whether compute selective confidence intervals (default: TRUE). compute_est Logical; whether compute selective point estimates (default: TRUE). B Number Monte Carlo samples used selective inference (default: 100000).","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/lmFScreen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lmFScreen: Selective Inference for Linear Regression via F-screening — lmFScreen","text":"object class lmFScreen, includes: Selective coefficients, confidence intervals, p-values Naive (unadjusted) estimates, confidence intervals, p-values Model-level settings alpha alpha_ov","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/lmFScreen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"lmFScreen: Selective Inference for Linear Regression via F-screening — lmFScreen","text":"function performs following steps: Converts formula model matrix response vector. Projects intercept one included formula. Calls lmFScreen.fit compute selective inference results predictors.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/lmFScreen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lmFScreen: Selective Inference for Linear Regression via F-screening — lmFScreen","text":"","code":"data(mtcars) result <- lmFScreen(mpg ~ wt + hp, data = mtcars) summary(result) #>  #>  lmFScreen Model Summary  #> -------------------------------------- #> Number of predictors: 2 #> -------------------------------------- #>  #> Selective Estimates: #> Predictor       Estimate     Lower.CI    Upper.CI    P-value #> ------------------------------------------------------------- #>  wt            -3.877831     -5.1686     -2.5836      0.0000*** #>  hp            -0.031773     -0.0503     -0.0133      0.0014** #>  #> Naive Estimates: #> Predictor       Estimate     Lower.CI    Upper.CI    P-value #> ------------------------------------------------------------- #>  wt            -3.877831     -5.1180     -2.6377      0.0000*** #>  hp            -0.031773     -0.0495     -0.0141      0.0015** #>  #>  #> Significance levels: * < 0.05  ** < 0.01  *** < 0.001 coef(result) #>  #> Coefficients from lmFScreen #> ---------------------------- #>   Predictor Selective.Est   Naive.Est #> 1        wt   -3.87783074 -3.87783074 #> 2        hp   -0.03177295 -0.03177295 confint(result) #>  #> lmFScreen Model Confidence Intervals #> ------------------------------------------------------ #> Confidence Level: 95.00% #> Number of predictors: 2 #> ------------------------------------------------------ #>  #> Selective Confidence Intervals: #> Predictor       Lower.CI     Upper.CI #> --------------------------------------------- #>  wt                -5.1686       -2.5836 #>  hp                -0.0503       -0.0133 #>  #> Naive Confidence Intervals: #> Predictor       Lower.CI     Upper.CI #> --------------------------------------------- #>  wt                -5.1180       -2.6377 #>  hp                -0.0495       -0.0141 #>"},{"path":"https://mcgougho.github.io/lmFScreen/reference/psel_retro.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrospective Selective P-Value Based on Summary Statistics — psel_retro","title":"Retrospective Selective P-Value Based on Summary Statistics — psel_retro","text":"Computes selective p-value single regression coefficient (beta_i) using summary statistics linear model: R-squared, residual standard error (RSE), F-statistic test H_0: beta_i. function useful retrospective settings raw data unavailable.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/psel_retro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrospective Selective P-Value Based on Summary Statistics — psel_retro","text":"","code":"psel_retro(   n,   p,   R_squared,   RSE,   Fstat,   sigma_sq = NULL,   alpha_ov = 0.05,   B = 1e+06,   min_select = 1000,   max_attempts = 100 )"},{"path":"https://mcgougho.github.io/lmFScreen/reference/psel_retro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrospective Selective P-Value Based on Summary Statistics — psel_retro","text":"n Sample size (number observations). p Number predictors used F-screening (excluding intercept). R_squared R-squared fitted linear model. RSE Residual standard error fitted model. Fstat Observed F-statistic follow-hypothesis test beta_i. sigma_sq Optional estimate noise variance. NULL, uses debiased estimate accounts selection. alpha_ov Significance level overall F-test. Default 0.05. B Number Monte Carlo samples per iteration. Default 1,000,000. min_select Minimum number samples satisfying selection condition. Default 1,000. max_attempts Maximum number iterations passing selection criterion giving . Default 100.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/psel_retro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrospective Selective P-Value Based on Summary Statistics — psel_retro","text":"numeric value representing estimated selective p-value. selected samples obtained max_attempts, function returns NA issues warning.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/psel_retro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrospective Selective P-Value Based on Summary Statistics — psel_retro","text":"selective p-value estimated conditional probability test statistic W / Z exceeds observed value, W follows chi-squared distribution 1 degree freedom, Z follows chi-squared distribution n - p - 1 degrees freedom. selection condition based rejection threshold overall F-test. method can applied settings summary statistics available, published studies.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/psel_retro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrospective Selective P-Value Based on Summary Statistics — psel_retro","text":"","code":"data(mtcars) mod <- lm(mpg ~ wt + hp, data = mtcars) rse <- summary(mod)$sigma r2 <- summary(mod)$r.squared t_wt <- summary(mod)$coefficients[\"wt\", \"t value\"] psel_retro(n=nrow(mtcars), p=2, R_squared=r2, RSE=rse, Fstat=t_wt^2) #> [1] 1e-06"},{"path":"https://mcgougho.github.io/lmFScreen/reference/summary.lmFScreen.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize an lmFScreen Model — summary.lmFScreen","title":"Summarize an lmFScreen Model — summary.lmFScreen","text":"Displays structured summary lmFScreen model, including selective naive estimates, confidence intervals, p-values.","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/summary.lmFScreen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize an lmFScreen Model — summary.lmFScreen","text":"","code":"# S3 method for class 'lmFScreen' summary(object, ...)"},{"path":"https://mcgougho.github.io/lmFScreen/reference/summary.lmFScreen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize an lmFScreen Model — summary.lmFScreen","text":"object object class lmFScreen containing model results. ... Additional arguments (currently unused).","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/summary.lmFScreen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize an lmFScreen Model — summary.lmFScreen","text":"Invisibly returns list containing: Selective: data frame selective estimates, confidence intervals, p-values Naive: data frame naive estimates, confidence intervals, p-values","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/summary.lmFScreen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize an lmFScreen Model — summary.lmFScreen","text":"output includes: header indicating number predictors table selective estimates confidence intervals p-values table naive estimates confidence intervals p-values Significance stars added p-values: p < 0.05 ** p < 0.01 *** p < 0.001","code":""},{"path":"https://mcgougho.github.io/lmFScreen/reference/summary.lmFScreen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize an lmFScreen Model — summary.lmFScreen","text":"","code":"data(mtcars) result <- lmFScreen(mpg ~ wt + hp, data = mtcars) summary(result) #>  #>  lmFScreen Model Summary  #> -------------------------------------- #> Number of predictors: 2 #> -------------------------------------- #>  #> Selective Estimates: #> Predictor       Estimate     Lower.CI    Upper.CI    P-value #> ------------------------------------------------------------- #>  wt            -3.877831     -5.1726     -2.5821      0.0000*** #>  hp            -0.031773     -0.0502     -0.0133      0.0015** #>  #> Naive Estimates: #> Predictor       Estimate     Lower.CI    Upper.CI    P-value #> ------------------------------------------------------------- #>  wt            -3.877831     -5.1180     -2.6377      0.0000*** #>  hp            -0.031773     -0.0495     -0.0141      0.0015** #>  #>  #> Significance levels: * < 0.05  ** < 0.01  *** < 0.001"}]
